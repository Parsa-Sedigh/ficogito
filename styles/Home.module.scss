@mixin backgroundGenerator($direction, $skewX) {
  position: absolute;

  @if($direction == 'left') {
    left: auto;
    transform-origin: left bottom;
  } @else if ($direction == 'right') {
    right: auto;
    transform-origin: right bottom;
  }
  //transform: skewX($skewX);
  height: 100%;
  width: 100%;
  top: 0;
  background: rgba(150, 150, 150, 0.05);
}

@mixin respond($breakpoint) {
  @if ($breakpoint == phone) {
    @media (max-width: 37.5em) {
      @content;
    }
  }

  @if ($breakpoint == tab-port) {
    @media (max-width: 56.25em) {
      @content;
    }
  }

  @if ($breakpoint == tab-land) {
    @media (max-width: 75em) {
      @content;
    }
  }

  @if ($breakpoint == big-desktop) {
    @media (min-width: 112.25em) {
      @content;
    }
  }
}

.container {
  //min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80vh;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;

  &::before {
    --background-color: rgba(255, 255, 255, 0.55);

    content: "";
    position: fixed;
    left: 0;
    right: 0;
    z-index: -1;
    height: 100%;
    /*background-image: linear-gradient(var(--background-color), var(--background-color)), url("/images/Ficogito-Background.png");*/
    filter: blur(3px);
  }
}

#tsparticles {
  overflow: visible !important;
}

.particles {
  position: relative;
  background-color: #fafafa;
  clip-path: polygon(0 0, 100% 0, 100% 60vh, 0 90vh);
  overflow: hidden;

  @include respond(phone) {
    clip-path: polygon(0 0, 100% 0, 100% 100vh, 0 100vh);
  }

  & canvas {
    height: 99vh !important;
    position: relative !important;
  }

  & > :nth-child(1) {
    /*height: 50%;*/
    /*width: 12%;*/
  }

  & > :nth-child(2) {
    /*height: 20%;*/
    /*width: 20%;*/
  }
}

.image-container {
  position: relative;
  z-index: 5;
}

.hexagonal {

  &__logo {
    position: relative;
    bottom: .5rem;
    width: 18rem;
    height: 18rem;
    margin-right: -4rem;
    //box-shadow: 0 2px 100px;

    @include respond(phone) {
      margin-right: 0;
    }

    & > span {
      overflow: visible !important;
    }
  }


  &__image {
    animation: MoveUpDown 4s linear infinite;
  }
}

.text {

  &__logo {
    position: relative;
    height: 11rem;
    flex: 0 0 50%;

    @include respond(phone) {
      width: 100%;
    }
  }
}

@keyframes MoveUpDown {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-.75rem);
  }
}

@media (max-width: 56.25em) {
  .container {
    flex-direction: column;
    padding: 1rem;
  }

  .container > div {
    display: flex !important;
    justify-content: center;
    align-items: center;
  }

  .container > :nth-child(1) {
    max-width: 60% !important;
  }

  .logo {
    /*min-width: 50% !important;*/
    /*min-height: 50% !important;*/
    margin-right: 0 !important;
    margin-bottom: 2rem !important;
  }
}

.text-logo {
  position: relative;
}

.background {
  position: absolute;
  background: rgba(0, 0, 0, 0.03);
  overflow: hidden;


  &::before, &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    background: rgba(0, 0, 0, 0.05);
  }

  &::before {

  }

  &::after {

  }

  &--left {
    @include backgroundGenerator('left', 33deg);
    right: 70%;
    left: auto;
    transform: skewX(33deg);

    &::before, &::after {
      content: '';
      position: absolute;

      @include backgroundGenerator('left', 33deg);
    }

    &::before {
      right: 10%;
    }

    &::after {
      right: 20%;
    }
  }

  &--right {
    @include backgroundGenerator('right', -33deg);
    left: 55%;
    right: auto;
    transform: skewX(-33deg);

    &::before, &::after {
      content: '';
      position: absolute;

      @include backgroundGenerator('right', 33deg);
    }

    &::before {
      left: 10%;
    }

    &::after {
      left: 20%;
    }
  }
}

.paths {
  display: flex;
  justify-content: center;
  position: relative;
  margin-top: 5rem;
  overflow: hidden;
}

.dots {
  position: absolute;
  right: -10rem;
  color: var(--color-primary-5);
}




